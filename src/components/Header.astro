<header class="header">
  <a class="header__logo" href="/">Klas NÃ¤sman</a>
  <nav>
    <div>
      <a href="#about">About</a>
    </div>
    <div>
      <p class="nav__projects">Projects:</p>
      <a href="#selected">Selected</a>
      <a href="#all">All</a>
    </div>
  </nav>
</header>

<style>
  header {
    display: flex;
    position: fixed;
    align-items: baseline;
    justify-content: space-between;
    padding-top: var(--spacer-l);
    padding-inline: 4rem;
    width: 100%;
    z-index: 10;
  }

  @media (width <=750px) {
    header {
      padding-inline: 1rem;
    }
  }

  .header__logo {
    font-size: var(--step-0);
    text-transform: uppercase;
  }

  nav {
    display: flex;
    gap: 4rem;
    text-transform: uppercase;
    opacity: 1;
    transition: opacity 0.3s;
  }

  @media (width <=750px) {
    nav {
      opacity: 1;
      gap: var(--spacer-xs);
      flex-direction: column;
      align-items: flex-end;
    }

    .nav__projects {
      display: none;
    }
  }

  nav > div {
    display: flex;
    gap: 1rem;
  }

  /* nav hover underline */
  nav a:after {
    display: block;
    content: "";
    height: 1px;
    width: 0%;
    background-color: var(--clr-text);
    transition: width 0.3s ease-in-out;
  }

  nav a:hover:after {
    width: 100%;
  }

  /* active section underline */
  .active:after {
    display: block;
    content: "";
    height: 1px;
    width: 100%;
    background-color: var(--clr-text);
  }
</style>

<script is:inline>
document.addEventListener("DOMContentLoaded", () => {
  const handleIntersection = (entries) => {
    entries.forEach((entry) => {
      const targetId = entry.target.id;
      const targetNavLink = document.querySelector(`a[href="#${targetId}"]`);

      if (entry.isIntersecting) {
        targetNavLink.classList.add("active");
      } else {
        targetNavLink.classList.remove("active");
      }
    });
  };

  const setupObserver = () => {
    const isMobile = window.innerWidth < 750;
    const threshold = isMobile ? [0.2] : [0.5];

    const observer = new IntersectionObserver(handleIntersection, {
      rootMargin: "0px",
      threshold: threshold,
    });

    const sections = document.querySelectorAll("#about, #selected, #all");
    sections.forEach((section) => observer.observe(section));
  };

  setTimeout(setupObserver, 0);
});
</script>
