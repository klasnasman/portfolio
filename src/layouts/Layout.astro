---
import Header from "../components/Header.astro";
import Transitions from "../components/Transitions";
import "../styles/import.css";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>{title}</title>
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="theme-color" content="#f1f1f0" />
  </head>
  <body>
    <main class="main">
      <Header />
      <Transitions client:load>
        <slot />
      </Transitions>
    </main>
    <script>
      import "/src/assets/js/sectionObserver.js";
      import "/src/assets/js/lazy.js";
      import "@assets/js/tableSort.js";
    </script>
  </body>
</html>

<script is:inline>
let darkMode = localStorage.getItem("darkMode");

const darkModeToggle = document.querySelector("#theme__toggle");

const enableDarkMode = () => {
  document.body.classList.add("darkmode");
  darkModeToggle.checked = true;
  localStorage.setItem("darkMode", "enabled");
};

const disableDarkMode = () => {
  document.body.classList.remove("darkmode");
  darkModeToggle.checked = false;
  localStorage.removeItem("darkMode");
};

if (darkMode === "enabled") {
  enableDarkMode();
}

if (darkModeToggle) {
  darkModeToggle.addEventListener("change", () => {
    if (darkModeToggle.checked) {
      enableDarkMode();
    } else {
      disableDarkMode();
    }
  });
}
</script>
